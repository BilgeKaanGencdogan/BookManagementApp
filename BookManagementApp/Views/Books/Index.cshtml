@model IEnumerable<BookModel>
@*Generated from Custom Template.*@
@*Model namespace using directive should be added to _ViewImports.cshtml.*@

@{
    ViewData["Title"] = "Books";
  
}

<h1>@ViewData["Title"]</h1>

@if (TempData["Message"] is not null)
{
    <p class="bg-danger text-white">@TempData["Message"]</p>
}
@if (User.IsInRole("admin"))
{
    <p>
        <a asp-action="Create">Create New</a>
    </p>
}

<table  id="datatable" class="display" style="width:100%;">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Isbn)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.NumberOfPages)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PublishDateOutput)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.BookType)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PriceOutput)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsTopSeller)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.AuthorOutput)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.GenreModels)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
		@foreach (var item in Model) {
				<tr>
					<td>
						@Html.DisplayFor(modelItem => item.Name)
					</td>
					<td>
						@Html.DisplayFor(modelItem => item.Isbn)
					</td>
					<td>
						@Html.DisplayFor(modelItem => item.NumberOfPages)
					</td>
					<td>
						@Html.DisplayFor(modelItem => item.PublishDateOutput)
					</td>
					<td>
						@Html.DisplayFor(modelItem => item.BookType)
					</td>
					<td>
						@Html.DisplayFor(modelItem => item.PriceOutput)
					</td>
					<td>
						@Html.DisplayFor(modelItem => item.IsTopSeller)
					</td>
					<td>
                    @Html.DisplayFor(modelItem => item.AuthorOutput)
					</td>
                <td>
                    @foreach (var genre in item.GenreModels)
                    {
                        <span>@genre.Name</span>

                        <br />
                    }
                </td>
					<td>
						<a asp-action="Details" asp-route-id="@item.Id">Details</a>
                    @if (User.IsInRole("admin"))
                    {
                        <span>&nbsp;|&nbsp;</span>
                        <a asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                        <span>&nbsp;|&nbsp;</span>
                        <a href="/Books/Delete/@item.Id" onclick="deleteBook(@item.Id);">Delete</a>
                    }
					</td>
				</tr>
		}
    </tbody>
</table>

@section Scripts {
    <link href="~/lib/datatables/css/jquery.datatables.min.css" rel="stylesheet" />
    <script src="~/lib/datatables/js/jquery.datatables.min.js"></script>

    <link href="~/lib/alertifyjs/css/alertify.min.css" rel="stylesheet" />
    <script src="~/lib/alertifyjs/alertify.min.js"></script>

    <script>
        $(function () {
            $("#datatable").DataTable();
        });

        function deleteBook(id) { /
            alertify.confirm(
                "Warning!",
                "Are you sure you want to delete this book?",
                function () {
                    window.location.href = "/Books/Delete/" + id;

                },
                function () { 
                 
                }
            ).set("labels", { ok: "Yes", cancel: "No" });
        }
    </script>
}